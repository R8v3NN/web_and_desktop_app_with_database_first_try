//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WindowsFormsApp1 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BAZA_MALARNIADataSet8")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BAZA_MALARNIADataSet8 : global::System.Data.DataSet {
        
        private ZLECENIADataTable tableZLECENIA;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public BAZA_MALARNIADataSet8() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected BAZA_MALARNIADataSet8(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ZLECENIA"] != null)) {
                    base.Tables.Add(new ZLECENIADataTable(ds.Tables["ZLECENIA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ZLECENIADataTable ZLECENIA {
            get {
                return this.tableZLECENIA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            BAZA_MALARNIADataSet8 cln = ((BAZA_MALARNIADataSet8)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ZLECENIA"] != null)) {
                    base.Tables.Add(new ZLECENIADataTable(ds.Tables["ZLECENIA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableZLECENIA = ((ZLECENIADataTable)(base.Tables["ZLECENIA"]));
            if ((initTable == true)) {
                if ((this.tableZLECENIA != null)) {
                    this.tableZLECENIA.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "BAZA_MALARNIADataSet8";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BAZA_MALARNIADataSet8.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableZLECENIA = new ZLECENIADataTable();
            base.Tables.Add(this.tableZLECENIA);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeZLECENIA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BAZA_MALARNIADataSet8 ds = new BAZA_MALARNIADataSet8();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ZLECENIARowChangeEventHandler(object sender, ZLECENIARowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ZLECENIADataTable : global::System.Data.TypedTableBase<ZLECENIARow> {
            
            private global::System.Data.DataColumn columnID_ZLECENIA;
            
            private global::System.Data.DataColumn columnID_STATUS;
            
            private global::System.Data.DataColumn columnID_POWIERZCHNIA;
            
            private global::System.Data.DataColumn columnID_POŁYSK;
            
            private global::System.Data.DataColumn columnID_KOLOR;
            
            private global::System.Data.DataColumn columnID_DOSTAWCA_FARBY;
            
            private global::System.Data.DataColumn columnID_KLIENT;
            
            private global::System.Data.DataColumn columnID_TYP_FARBY;
            
            private global::System.Data.DataColumn columnNR_ZLECENIA;
            
            private global::System.Data.DataColumn columnDATA_DOSTAWY;
            
            private global::System.Data.DataColumn columnDATA_REALIZACJI;
            
            private global::System.Data.DataColumn columnNAZWA_WYROBU;
            
            private global::System.Data.DataColumn columnUWAGI;
            
            private global::System.Data.DataColumn columnILOŚĆ_SZTUK;
            
            private global::System.Data.DataColumn columnILOŚĆ_M2;
            
            private global::System.Data.DataColumn columnPODKŁAD;
            
            private global::System.Data.DataColumn columnŚRUT;
            
            private global::System.Data.DataColumn columnNR_TRAWERSY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ZLECENIADataTable() {
                this.TableName = "ZLECENIA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ZLECENIADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ZLECENIADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_ZLECENIAColumn {
                get {
                    return this.columnID_ZLECENIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_STATUSColumn {
                get {
                    return this.columnID_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_POWIERZCHNIAColumn {
                get {
                    return this.columnID_POWIERZCHNIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_POŁYSKColumn {
                get {
                    return this.columnID_POŁYSK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_KOLORColumn {
                get {
                    return this.columnID_KOLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_DOSTAWCA_FARBYColumn {
                get {
                    return this.columnID_DOSTAWCA_FARBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_KLIENTColumn {
                get {
                    return this.columnID_KLIENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_TYP_FARBYColumn {
                get {
                    return this.columnID_TYP_FARBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NR_ZLECENIAColumn {
                get {
                    return this.columnNR_ZLECENIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DATA_DOSTAWYColumn {
                get {
                    return this.columnDATA_DOSTAWY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DATA_REALIZACJIColumn {
                get {
                    return this.columnDATA_REALIZACJI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAZWA_WYROBUColumn {
                get {
                    return this.columnNAZWA_WYROBU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UWAGIColumn {
                get {
                    return this.columnUWAGI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ILOŚĆ_SZTUKColumn {
                get {
                    return this.columnILOŚĆ_SZTUK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ILOŚĆ_M2Column {
                get {
                    return this.columnILOŚĆ_M2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PODKŁADColumn {
                get {
                    return this.columnPODKŁAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ŚRUTColumn {
                get {
                    return this.columnŚRUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NR_TRAWERSYColumn {
                get {
                    return this.columnNR_TRAWERSY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ZLECENIARow this[int index] {
                get {
                    return ((ZLECENIARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ZLECENIARowChangeEventHandler ZLECENIARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ZLECENIARowChangeEventHandler ZLECENIARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ZLECENIARowChangeEventHandler ZLECENIARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ZLECENIARowChangeEventHandler ZLECENIARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddZLECENIARow(ZLECENIARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ZLECENIARow AddZLECENIARow(
                        decimal ID_STATUS, 
                        decimal ID_POWIERZCHNIA, 
                        decimal ID_POŁYSK, 
                        decimal ID_KOLOR, 
                        decimal ID_DOSTAWCA_FARBY, 
                        decimal ID_KLIENT, 
                        decimal ID_TYP_FARBY, 
                        string NR_ZLECENIA, 
                        System.DateTime DATA_DOSTAWY, 
                        System.DateTime DATA_REALIZACJI, 
                        string NAZWA_WYROBU, 
                        string UWAGI, 
                        decimal ILOŚĆ_SZTUK, 
                        decimal ILOŚĆ_M2, 
                        bool PODKŁAD, 
                        bool ŚRUT, 
                        decimal NR_TRAWERSY) {
                ZLECENIARow rowZLECENIARow = ((ZLECENIARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ID_STATUS,
                        ID_POWIERZCHNIA,
                        ID_POŁYSK,
                        ID_KOLOR,
                        ID_DOSTAWCA_FARBY,
                        ID_KLIENT,
                        ID_TYP_FARBY,
                        NR_ZLECENIA,
                        DATA_DOSTAWY,
                        DATA_REALIZACJI,
                        NAZWA_WYROBU,
                        UWAGI,
                        ILOŚĆ_SZTUK,
                        ILOŚĆ_M2,
                        PODKŁAD,
                        ŚRUT,
                        NR_TRAWERSY};
                rowZLECENIARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowZLECENIARow);
                return rowZLECENIARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ZLECENIARow FindByID_ZLECENIA(decimal ID_ZLECENIA) {
                return ((ZLECENIARow)(this.Rows.Find(new object[] {
                            ID_ZLECENIA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ZLECENIADataTable cln = ((ZLECENIADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ZLECENIADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnID_ZLECENIA = base.Columns["ID_ZLECENIA"];
                this.columnID_STATUS = base.Columns["ID_STATUS"];
                this.columnID_POWIERZCHNIA = base.Columns["ID_POWIERZCHNIA"];
                this.columnID_POŁYSK = base.Columns["ID_POŁYSK"];
                this.columnID_KOLOR = base.Columns["ID_KOLOR"];
                this.columnID_DOSTAWCA_FARBY = base.Columns["ID_DOSTAWCA_FARBY"];
                this.columnID_KLIENT = base.Columns["ID_KLIENT"];
                this.columnID_TYP_FARBY = base.Columns["ID_TYP_FARBY"];
                this.columnNR_ZLECENIA = base.Columns["NR_ZLECENIA"];
                this.columnDATA_DOSTAWY = base.Columns["DATA_DOSTAWY"];
                this.columnDATA_REALIZACJI = base.Columns["DATA_REALIZACJI"];
                this.columnNAZWA_WYROBU = base.Columns["NAZWA_WYROBU"];
                this.columnUWAGI = base.Columns["UWAGI"];
                this.columnILOŚĆ_SZTUK = base.Columns["ILOŚĆ_SZTUK"];
                this.columnILOŚĆ_M2 = base.Columns["ILOŚĆ_M2"];
                this.columnPODKŁAD = base.Columns["PODKŁAD"];
                this.columnŚRUT = base.Columns["ŚRUT"];
                this.columnNR_TRAWERSY = base.Columns["NR_TRAWERSY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnID_ZLECENIA = new global::System.Data.DataColumn("ID_ZLECENIA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ZLECENIA);
                this.columnID_STATUS = new global::System.Data.DataColumn("ID_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_STATUS);
                this.columnID_POWIERZCHNIA = new global::System.Data.DataColumn("ID_POWIERZCHNIA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_POWIERZCHNIA);
                this.columnID_POŁYSK = new global::System.Data.DataColumn("ID_POŁYSK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_POŁYSK);
                this.columnID_KOLOR = new global::System.Data.DataColumn("ID_KOLOR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KOLOR);
                this.columnID_DOSTAWCA_FARBY = new global::System.Data.DataColumn("ID_DOSTAWCA_FARBY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_DOSTAWCA_FARBY);
                this.columnID_KLIENT = new global::System.Data.DataColumn("ID_KLIENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KLIENT);
                this.columnID_TYP_FARBY = new global::System.Data.DataColumn("ID_TYP_FARBY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_TYP_FARBY);
                this.columnNR_ZLECENIA = new global::System.Data.DataColumn("NR_ZLECENIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNR_ZLECENIA);
                this.columnDATA_DOSTAWY = new global::System.Data.DataColumn("DATA_DOSTAWY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_DOSTAWY);
                this.columnDATA_REALIZACJI = new global::System.Data.DataColumn("DATA_REALIZACJI", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_REALIZACJI);
                this.columnNAZWA_WYROBU = new global::System.Data.DataColumn("NAZWA_WYROBU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAZWA_WYROBU);
                this.columnUWAGI = new global::System.Data.DataColumn("UWAGI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUWAGI);
                this.columnILOŚĆ_SZTUK = new global::System.Data.DataColumn("ILOŚĆ_SZTUK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnILOŚĆ_SZTUK);
                this.columnILOŚĆ_M2 = new global::System.Data.DataColumn("ILOŚĆ_M2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnILOŚĆ_M2);
                this.columnPODKŁAD = new global::System.Data.DataColumn("PODKŁAD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODKŁAD);
                this.columnŚRUT = new global::System.Data.DataColumn("ŚRUT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnŚRUT);
                this.columnNR_TRAWERSY = new global::System.Data.DataColumn("NR_TRAWERSY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNR_TRAWERSY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ZLECENIA}, true));
                this.columnID_ZLECENIA.AutoIncrement = true;
                this.columnID_ZLECENIA.AutoIncrementSeed = -1;
                this.columnID_ZLECENIA.AutoIncrementStep = -1;
                this.columnID_ZLECENIA.AllowDBNull = false;
                this.columnID_ZLECENIA.ReadOnly = true;
                this.columnID_ZLECENIA.Unique = true;
                this.columnID_STATUS.AllowDBNull = false;
                this.columnID_POWIERZCHNIA.AllowDBNull = false;
                this.columnID_POŁYSK.AllowDBNull = false;
                this.columnID_KOLOR.AllowDBNull = false;
                this.columnID_DOSTAWCA_FARBY.AllowDBNull = false;
                this.columnID_KLIENT.AllowDBNull = false;
                this.columnID_TYP_FARBY.AllowDBNull = false;
                this.columnNR_ZLECENIA.AllowDBNull = false;
                this.columnNR_ZLECENIA.MaxLength = 32;
                this.columnDATA_DOSTAWY.AllowDBNull = false;
                this.columnDATA_REALIZACJI.AllowDBNull = false;
                this.columnNAZWA_WYROBU.AllowDBNull = false;
                this.columnNAZWA_WYROBU.MaxLength = 32;
                this.columnUWAGI.MaxLength = 255;
                this.columnILOŚĆ_SZTUK.AllowDBNull = false;
                this.columnILOŚĆ_M2.AllowDBNull = false;
                this.columnNR_TRAWERSY.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ZLECENIARow NewZLECENIARow() {
                return ((ZLECENIARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ZLECENIARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ZLECENIARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ZLECENIARowChanged != null)) {
                    this.ZLECENIARowChanged(this, new ZLECENIARowChangeEvent(((ZLECENIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ZLECENIARowChanging != null)) {
                    this.ZLECENIARowChanging(this, new ZLECENIARowChangeEvent(((ZLECENIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ZLECENIARowDeleted != null)) {
                    this.ZLECENIARowDeleted(this, new ZLECENIARowChangeEvent(((ZLECENIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ZLECENIARowDeleting != null)) {
                    this.ZLECENIARowDeleting(this, new ZLECENIARowChangeEvent(((ZLECENIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveZLECENIARow(ZLECENIARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BAZA_MALARNIADataSet8 ds = new BAZA_MALARNIADataSet8();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ZLECENIADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ZLECENIARow : global::System.Data.DataRow {
            
            private ZLECENIADataTable tableZLECENIA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ZLECENIARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableZLECENIA = ((ZLECENIADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_ZLECENIA {
                get {
                    return ((decimal)(this[this.tableZLECENIA.ID_ZLECENIAColumn]));
                }
                set {
                    this[this.tableZLECENIA.ID_ZLECENIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_STATUS {
                get {
                    return ((decimal)(this[this.tableZLECENIA.ID_STATUSColumn]));
                }
                set {
                    this[this.tableZLECENIA.ID_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_POWIERZCHNIA {
                get {
                    return ((decimal)(this[this.tableZLECENIA.ID_POWIERZCHNIAColumn]));
                }
                set {
                    this[this.tableZLECENIA.ID_POWIERZCHNIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_POŁYSK {
                get {
                    return ((decimal)(this[this.tableZLECENIA.ID_POŁYSKColumn]));
                }
                set {
                    this[this.tableZLECENIA.ID_POŁYSKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_KOLOR {
                get {
                    return ((decimal)(this[this.tableZLECENIA.ID_KOLORColumn]));
                }
                set {
                    this[this.tableZLECENIA.ID_KOLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_DOSTAWCA_FARBY {
                get {
                    return ((decimal)(this[this.tableZLECENIA.ID_DOSTAWCA_FARBYColumn]));
                }
                set {
                    this[this.tableZLECENIA.ID_DOSTAWCA_FARBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_KLIENT {
                get {
                    return ((decimal)(this[this.tableZLECENIA.ID_KLIENTColumn]));
                }
                set {
                    this[this.tableZLECENIA.ID_KLIENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_TYP_FARBY {
                get {
                    return ((decimal)(this[this.tableZLECENIA.ID_TYP_FARBYColumn]));
                }
                set {
                    this[this.tableZLECENIA.ID_TYP_FARBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NR_ZLECENIA {
                get {
                    return ((string)(this[this.tableZLECENIA.NR_ZLECENIAColumn]));
                }
                set {
                    this[this.tableZLECENIA.NR_ZLECENIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DATA_DOSTAWY {
                get {
                    return ((global::System.DateTime)(this[this.tableZLECENIA.DATA_DOSTAWYColumn]));
                }
                set {
                    this[this.tableZLECENIA.DATA_DOSTAWYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DATA_REALIZACJI {
                get {
                    return ((global::System.DateTime)(this[this.tableZLECENIA.DATA_REALIZACJIColumn]));
                }
                set {
                    this[this.tableZLECENIA.DATA_REALIZACJIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAZWA_WYROBU {
                get {
                    return ((string)(this[this.tableZLECENIA.NAZWA_WYROBUColumn]));
                }
                set {
                    this[this.tableZLECENIA.NAZWA_WYROBUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UWAGI {
                get {
                    try {
                        return ((string)(this[this.tableZLECENIA.UWAGIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'UWAGI\' w tabeli \'ZLECENIA\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZLECENIA.UWAGIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ILOŚĆ_SZTUK {
                get {
                    return ((decimal)(this[this.tableZLECENIA.ILOŚĆ_SZTUKColumn]));
                }
                set {
                    this[this.tableZLECENIA.ILOŚĆ_SZTUKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ILOŚĆ_M2 {
                get {
                    return ((decimal)(this[this.tableZLECENIA.ILOŚĆ_M2Column]));
                }
                set {
                    this[this.tableZLECENIA.ILOŚĆ_M2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool PODKŁAD {
                get {
                    try {
                        return ((bool)(this[this.tableZLECENIA.PODKŁADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'PODKŁAD\' w tabeli \'ZLECENIA\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZLECENIA.PODKŁADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool ŚRUT {
                get {
                    try {
                        return ((bool)(this[this.tableZLECENIA.ŚRUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'ŚRUT\' w tabeli \'ZLECENIA\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZLECENIA.ŚRUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NR_TRAWERSY {
                get {
                    return ((decimal)(this[this.tableZLECENIA.NR_TRAWERSYColumn]));
                }
                set {
                    this[this.tableZLECENIA.NR_TRAWERSYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUWAGINull() {
                return this.IsNull(this.tableZLECENIA.UWAGIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUWAGINull() {
                this[this.tableZLECENIA.UWAGIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPODKŁADNull() {
                return this.IsNull(this.tableZLECENIA.PODKŁADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPODKŁADNull() {
                this[this.tableZLECENIA.PODKŁADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsŚRUTNull() {
                return this.IsNull(this.tableZLECENIA.ŚRUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetŚRUTNull() {
                this[this.tableZLECENIA.ŚRUTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ZLECENIARowChangeEvent : global::System.EventArgs {
            
            private ZLECENIARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ZLECENIARowChangeEvent(ZLECENIARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ZLECENIARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WindowsFormsApp1.BAZA_MALARNIADataSet8TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ZLECENIATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ZLECENIATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ZLECENIA";
            tableMapping.ColumnMappings.Add("ID_ZLECENIA", "ID_ZLECENIA");
            tableMapping.ColumnMappings.Add("ID_STATUS", "ID_STATUS");
            tableMapping.ColumnMappings.Add("ID_POWIERZCHNIA", "ID_POWIERZCHNIA");
            tableMapping.ColumnMappings.Add("ID_POŁYSK", "ID_POŁYSK");
            tableMapping.ColumnMappings.Add("ID_KOLOR", "ID_KOLOR");
            tableMapping.ColumnMappings.Add("ID_DOSTAWCA_FARBY", "ID_DOSTAWCA_FARBY");
            tableMapping.ColumnMappings.Add("ID_KLIENT", "ID_KLIENT");
            tableMapping.ColumnMappings.Add("ID_TYP_FARBY", "ID_TYP_FARBY");
            tableMapping.ColumnMappings.Add("NR_ZLECENIA", "NR_ZLECENIA");
            tableMapping.ColumnMappings.Add("DATA_DOSTAWY", "DATA_DOSTAWY");
            tableMapping.ColumnMappings.Add("DATA_REALIZACJI", "DATA_REALIZACJI");
            tableMapping.ColumnMappings.Add("NAZWA_WYROBU", "NAZWA_WYROBU");
            tableMapping.ColumnMappings.Add("UWAGI", "UWAGI");
            tableMapping.ColumnMappings.Add("ILOŚĆ_SZTUK", "ILOŚĆ_SZTUK");
            tableMapping.ColumnMappings.Add("ILOŚĆ_M2", "ILOŚĆ_M2");
            tableMapping.ColumnMappings.Add("PODKŁAD", "PODKŁAD");
            tableMapping.ColumnMappings.Add("ŚRUT", "ŚRUT");
            tableMapping.ColumnMappings.Add("NR_TRAWERSY", "NR_TRAWERSY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ZLECENIA] WHERE (([ID_ZLECENIA] = @Original_ID_ZLECENIA) AND ([ID_STATUS] = @Original_ID_STATUS) AND ([ID_POWIERZCHNIA] = @Original_ID_POWIERZCHNIA) AND ([ID_POŁYSK] = @Original_ID_POŁYSK) AND ([ID_KOLOR] = @Original_ID_KOLOR) AND ([ID_DOSTAWCA_FARBY] = @Original_ID_DOSTAWCA_FARBY) AND ([ID_KLIENT] = @Original_ID_KLIENT) AND ([ID_TYP_FARBY] = @Original_ID_TYP_FARBY) AND ([NR_ZLECENIA] = @Original_NR_ZLECENIA) AND ([DATA_DOSTAWY] = @Original_DATA_DOSTAWY) AND ([DATA_REALIZACJI] = @Original_DATA_REALIZACJI) AND ([NAZWA_WYROBU] = @Original_NAZWA_WYROBU) AND ((@IsNull_UWAGI = 1 AND [UWAGI] IS NULL) OR ([UWAGI] = @Original_UWAGI)) AND ([ILOŚĆ_SZTUK] = @Original_ILOŚĆ_SZTUK) AND ([ILOŚĆ_M2] = @Original_ILOŚĆ_M2) AND ((@IsNull_PODKŁAD = 1 AND [PODKŁAD] IS NULL) OR ([PODKŁAD] = @Original_PODKŁAD)) AND ((@IsNull_ŚRUT = 1 AND [ŚRUT] IS NULL) OR ([ŚRUT] = @Original_ŚRUT)) AND ([NR_TRAWERSY] = @Original_NR_TRAWERSY))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ZLECENIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_ZLECENIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_STATUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_STATUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_POWIERZCHNIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_POWIERZCHNIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_POŁYSK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_POŁYSK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_KOLOR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_KOLOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DOSTAWCA_FARBY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_DOSTAWCA_FARBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_KLIENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_KLIENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_TYP_FARBY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_TYP_FARBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NR_ZLECENIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NR_ZLECENIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATA_DOSTAWY", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATA_DOSTAWY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATA_REALIZACJI", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATA_REALIZACJI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAZWA_WYROBU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAZWA_WYROBU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UWAGI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UWAGI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UWAGI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UWAGI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ILOŚĆ_SZTUK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ILOŚĆ_SZTUK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ILOŚĆ_M2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ILOŚĆ_M2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PODKŁAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PODKŁAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PODKŁAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PODKŁAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ŚRUT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ŚRUT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ŚRUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ŚRUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NR_TRAWERSY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "NR_TRAWERSY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ZLECENIA] ([ID_STATUS], [ID_POWIERZCHNIA], [ID_POŁYSK], [ID_KOLOR], [ID_DOSTAWCA_FARBY], [ID_KLIENT], [ID_TYP_FARBY], [NR_ZLECENIA], [DATA_DOSTAWY], [DATA_REALIZACJI], [NAZWA_WYROBU], [UWAGI], [ILOŚĆ_SZTUK], [ILOŚĆ_M2], [PODKŁAD], [ŚRUT], [NR_TRAWERSY]) VALUES (@ID_STATUS, @ID_POWIERZCHNIA, @ID_POŁYSK, @ID_KOLOR, @ID_DOSTAWCA_FARBY, @ID_KLIENT, @ID_TYP_FARBY, @NR_ZLECENIA, @DATA_DOSTAWY, @DATA_REALIZACJI, @NAZWA_WYROBU, @UWAGI, @ILOŚĆ_SZTUK, @ILOŚĆ_M2, @PODKŁAD, @ŚRUT, @NR_TRAWERSY);
SELECT ID_ZLECENIA, ID_STATUS, ID_POWIERZCHNIA, ID_POŁYSK, ID_KOLOR, ID_DOSTAWCA_FARBY, ID_KLIENT, ID_TYP_FARBY, NR_ZLECENIA, DATA_DOSTAWY, DATA_REALIZACJI, NAZWA_WYROBU, UWAGI, ILOŚĆ_SZTUK, ILOŚĆ_M2, PODKŁAD, ŚRUT, NR_TRAWERSY FROM ZLECENIA WHERE (ID_ZLECENIA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_STATUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_POWIERZCHNIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_POWIERZCHNIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_POŁYSK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_POŁYSK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_KOLOR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_KOLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DOSTAWCA_FARBY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_DOSTAWCA_FARBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_KLIENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_KLIENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_TYP_FARBY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_TYP_FARBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NR_ZLECENIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NR_ZLECENIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATA_DOSTAWY", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATA_DOSTAWY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATA_REALIZACJI", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATA_REALIZACJI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAZWA_WYROBU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAZWA_WYROBU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UWAGI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UWAGI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ILOŚĆ_SZTUK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ILOŚĆ_SZTUK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ILOŚĆ_M2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ILOŚĆ_M2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PODKŁAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PODKŁAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ŚRUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ŚRUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NR_TRAWERSY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "NR_TRAWERSY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ZLECENIA] SET [ID_STATUS] = @ID_STATUS, [ID_POWIERZCHNIA] = @ID_POW" +
                "IERZCHNIA, [ID_POŁYSK] = @ID_POŁYSK, [ID_KOLOR] = @ID_KOLOR, [ID_DOSTAWCA_FARBY]" +
                " = @ID_DOSTAWCA_FARBY, [ID_KLIENT] = @ID_KLIENT, [ID_TYP_FARBY] = @ID_TYP_FARBY," +
                " [NR_ZLECENIA] = @NR_ZLECENIA, [DATA_DOSTAWY] = @DATA_DOSTAWY, [DATA_REALIZACJI]" +
                " = @DATA_REALIZACJI, [NAZWA_WYROBU] = @NAZWA_WYROBU, [UWAGI] = @UWAGI, [ILOŚĆ_SZ" +
                "TUK] = @ILOŚĆ_SZTUK, [ILOŚĆ_M2] = @ILOŚĆ_M2, [PODKŁAD] = @PODKŁAD, [ŚRUT] = @ŚRU" +
                "T, [NR_TRAWERSY] = @NR_TRAWERSY WHERE (([ID_ZLECENIA] = @Original_ID_ZLECENIA) A" +
                "ND ([ID_STATUS] = @Original_ID_STATUS) AND ([ID_POWIERZCHNIA] = @Original_ID_POW" +
                "IERZCHNIA) AND ([ID_POŁYSK] = @Original_ID_POŁYSK) AND ([ID_KOLOR] = @Original_I" +
                "D_KOLOR) AND ([ID_DOSTAWCA_FARBY] = @Original_ID_DOSTAWCA_FARBY) AND ([ID_KLIENT" +
                "] = @Original_ID_KLIENT) AND ([ID_TYP_FARBY] = @Original_ID_TYP_FARBY) AND ([NR_" +
                "ZLECENIA] = @Original_NR_ZLECENIA) AND ([DATA_DOSTAWY] = @Original_DATA_DOSTAWY)" +
                " AND ([DATA_REALIZACJI] = @Original_DATA_REALIZACJI) AND ([NAZWA_WYROBU] = @Orig" +
                "inal_NAZWA_WYROBU) AND ((@IsNull_UWAGI = 1 AND [UWAGI] IS NULL) OR ([UWAGI] = @O" +
                "riginal_UWAGI)) AND ([ILOŚĆ_SZTUK] = @Original_ILOŚĆ_SZTUK) AND ([ILOŚĆ_M2] = @O" +
                "riginal_ILOŚĆ_M2) AND ((@IsNull_PODKŁAD = 1 AND [PODKŁAD] IS NULL) OR ([PODKŁAD]" +
                " = @Original_PODKŁAD)) AND ((@IsNull_ŚRUT = 1 AND [ŚRUT] IS NULL) OR ([ŚRUT] = @" +
                "Original_ŚRUT)) AND ([NR_TRAWERSY] = @Original_NR_TRAWERSY));\r\nSELECT ID_ZLECENI" +
                "A, ID_STATUS, ID_POWIERZCHNIA, ID_POŁYSK, ID_KOLOR, ID_DOSTAWCA_FARBY, ID_KLIENT" +
                ", ID_TYP_FARBY, NR_ZLECENIA, DATA_DOSTAWY, DATA_REALIZACJI, NAZWA_WYROBU, UWAGI," +
                " ILOŚĆ_SZTUK, ILOŚĆ_M2, PODKŁAD, ŚRUT, NR_TRAWERSY FROM ZLECENIA WHERE (ID_ZLECE" +
                "NIA = @ID_ZLECENIA)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_STATUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_POWIERZCHNIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_POWIERZCHNIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_POŁYSK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_POŁYSK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_KOLOR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_KOLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DOSTAWCA_FARBY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_DOSTAWCA_FARBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_KLIENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_KLIENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_TYP_FARBY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_TYP_FARBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NR_ZLECENIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NR_ZLECENIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATA_DOSTAWY", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATA_DOSTAWY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATA_REALIZACJI", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATA_REALIZACJI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAZWA_WYROBU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAZWA_WYROBU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UWAGI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UWAGI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ILOŚĆ_SZTUK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ILOŚĆ_SZTUK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ILOŚĆ_M2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ILOŚĆ_M2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PODKŁAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PODKŁAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ŚRUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ŚRUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NR_TRAWERSY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "NR_TRAWERSY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ZLECENIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_ZLECENIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_STATUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_STATUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_POWIERZCHNIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_POWIERZCHNIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_POŁYSK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_POŁYSK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_KOLOR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_KOLOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DOSTAWCA_FARBY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_DOSTAWCA_FARBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_KLIENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_KLIENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_TYP_FARBY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID_TYP_FARBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NR_ZLECENIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NR_ZLECENIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATA_DOSTAWY", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATA_DOSTAWY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATA_REALIZACJI", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATA_REALIZACJI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAZWA_WYROBU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAZWA_WYROBU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UWAGI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UWAGI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UWAGI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UWAGI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ILOŚĆ_SZTUK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ILOŚĆ_SZTUK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ILOŚĆ_M2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ILOŚĆ_M2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PODKŁAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PODKŁAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PODKŁAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PODKŁAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ŚRUT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ŚRUT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ŚRUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ŚRUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NR_TRAWERSY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "NR_TRAWERSY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ZLECENIA", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID_ZLECENIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApp1.Properties.Settings.Default.BAZA_MALARNIAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ZLECENIA, ID_STATUS, ID_POWIERZCHNIA, ID_POŁYSK, ID_KOLOR, ID_DOSTAWCA_" +
                "FARBY, ID_KLIENT, ID_TYP_FARBY, NR_ZLECENIA, DATA_DOSTAWY, DATA_REALIZACJI, NAZW" +
                "A_WYROBU, UWAGI, ILOŚĆ_SZTUK, ILOŚĆ_M2, PODKŁAD, ŚRUT, NR_TRAWERSY FROM dbo.ZLEC" +
                "ENIA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BAZA_MALARNIADataSet8.ZLECENIADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BAZA_MALARNIADataSet8.ZLECENIADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BAZA_MALARNIADataSet8.ZLECENIADataTable dataTable = new BAZA_MALARNIADataSet8.ZLECENIADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BAZA_MALARNIADataSet8.ZLECENIADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BAZA_MALARNIADataSet8 dataSet) {
            return this.Adapter.Update(dataSet, "ZLECENIA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_ID_ZLECENIA, 
                    decimal Original_ID_STATUS, 
                    decimal Original_ID_POWIERZCHNIA, 
                    decimal Original_ID_POŁYSK, 
                    decimal Original_ID_KOLOR, 
                    decimal Original_ID_DOSTAWCA_FARBY, 
                    decimal Original_ID_KLIENT, 
                    decimal Original_ID_TYP_FARBY, 
                    string Original_NR_ZLECENIA, 
                    System.DateTime Original_DATA_DOSTAWY, 
                    System.DateTime Original_DATA_REALIZACJI, 
                    string Original_NAZWA_WYROBU, 
                    string Original_UWAGI, 
                    decimal Original_ILOŚĆ_SZTUK, 
                    decimal Original_ILOŚĆ_M2, 
                    global::System.Nullable<bool> Original_PODKŁAD, 
                    global::System.Nullable<bool> Original_ŚRUT, 
                    decimal Original_NR_TRAWERSY) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID_ZLECENIA));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_ID_STATUS));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_ID_POWIERZCHNIA));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_ID_POŁYSK));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_ID_KOLOR));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_ID_DOSTAWCA_FARBY));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_ID_KLIENT));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_ID_TYP_FARBY));
            if ((Original_NR_ZLECENIA == null)) {
                throw new global::System.ArgumentNullException("Original_NR_ZLECENIA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_NR_ZLECENIA));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_DATA_DOSTAWY));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_DATA_REALIZACJI));
            if ((Original_NAZWA_WYROBU == null)) {
                throw new global::System.ArgumentNullException("Original_NAZWA_WYROBU");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_NAZWA_WYROBU));
            }
            if ((Original_UWAGI == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_UWAGI));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_ILOŚĆ_SZTUK));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_ILOŚĆ_M2));
            if ((Original_PODKŁAD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_PODKŁAD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_ŚRUT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_ŚRUT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_NR_TRAWERSY));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal ID_STATUS, 
                    decimal ID_POWIERZCHNIA, 
                    decimal ID_POŁYSK, 
                    decimal ID_KOLOR, 
                    decimal ID_DOSTAWCA_FARBY, 
                    decimal ID_KLIENT, 
                    decimal ID_TYP_FARBY, 
                    string NR_ZLECENIA, 
                    System.DateTime DATA_DOSTAWY, 
                    System.DateTime DATA_REALIZACJI, 
                    string NAZWA_WYROBU, 
                    string UWAGI, 
                    decimal ILOŚĆ_SZTUK, 
                    decimal ILOŚĆ_M2, 
                    global::System.Nullable<bool> PODKŁAD, 
                    global::System.Nullable<bool> ŚRUT, 
                    decimal NR_TRAWERSY) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID_STATUS));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(ID_POWIERZCHNIA));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(ID_POŁYSK));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(ID_KOLOR));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(ID_DOSTAWCA_FARBY));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(ID_KLIENT));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(ID_TYP_FARBY));
            if ((NR_ZLECENIA == null)) {
                throw new global::System.ArgumentNullException("NR_ZLECENIA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(NR_ZLECENIA));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(DATA_DOSTAWY));
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(DATA_REALIZACJI));
            if ((NAZWA_WYROBU == null)) {
                throw new global::System.ArgumentNullException("NAZWA_WYROBU");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(NAZWA_WYROBU));
            }
            if ((UWAGI == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(UWAGI));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(ILOŚĆ_SZTUK));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(ILOŚĆ_M2));
            if ((PODKŁAD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(PODKŁAD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((ŚRUT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(ŚRUT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(NR_TRAWERSY));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ID_STATUS, 
                    decimal ID_POWIERZCHNIA, 
                    decimal ID_POŁYSK, 
                    decimal ID_KOLOR, 
                    decimal ID_DOSTAWCA_FARBY, 
                    decimal ID_KLIENT, 
                    decimal ID_TYP_FARBY, 
                    string NR_ZLECENIA, 
                    System.DateTime DATA_DOSTAWY, 
                    System.DateTime DATA_REALIZACJI, 
                    string NAZWA_WYROBU, 
                    string UWAGI, 
                    decimal ILOŚĆ_SZTUK, 
                    decimal ILOŚĆ_M2, 
                    global::System.Nullable<bool> PODKŁAD, 
                    global::System.Nullable<bool> ŚRUT, 
                    decimal NR_TRAWERSY, 
                    decimal Original_ID_ZLECENIA, 
                    decimal Original_ID_STATUS, 
                    decimal Original_ID_POWIERZCHNIA, 
                    decimal Original_ID_POŁYSK, 
                    decimal Original_ID_KOLOR, 
                    decimal Original_ID_DOSTAWCA_FARBY, 
                    decimal Original_ID_KLIENT, 
                    decimal Original_ID_TYP_FARBY, 
                    string Original_NR_ZLECENIA, 
                    System.DateTime Original_DATA_DOSTAWY, 
                    System.DateTime Original_DATA_REALIZACJI, 
                    string Original_NAZWA_WYROBU, 
                    string Original_UWAGI, 
                    decimal Original_ILOŚĆ_SZTUK, 
                    decimal Original_ILOŚĆ_M2, 
                    global::System.Nullable<bool> Original_PODKŁAD, 
                    global::System.Nullable<bool> Original_ŚRUT, 
                    decimal Original_NR_TRAWERSY, 
                    decimal ID_ZLECENIA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID_STATUS));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(ID_POWIERZCHNIA));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(ID_POŁYSK));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(ID_KOLOR));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(ID_DOSTAWCA_FARBY));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(ID_KLIENT));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(ID_TYP_FARBY));
            if ((NR_ZLECENIA == null)) {
                throw new global::System.ArgumentNullException("NR_ZLECENIA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(NR_ZLECENIA));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(DATA_DOSTAWY));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(DATA_REALIZACJI));
            if ((NAZWA_WYROBU == null)) {
                throw new global::System.ArgumentNullException("NAZWA_WYROBU");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(NAZWA_WYROBU));
            }
            if ((UWAGI == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(UWAGI));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(ILOŚĆ_SZTUK));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(ILOŚĆ_M2));
            if ((PODKŁAD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(PODKŁAD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((ŚRUT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(ŚRUT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(NR_TRAWERSY));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_ID_ZLECENIA));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_ID_STATUS));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_ID_POWIERZCHNIA));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_ID_POŁYSK));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_ID_KOLOR));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_ID_DOSTAWCA_FARBY));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_ID_KLIENT));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_ID_TYP_FARBY));
            if ((Original_NR_ZLECENIA == null)) {
                throw new global::System.ArgumentNullException("Original_NR_ZLECENIA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_NR_ZLECENIA));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_DATA_DOSTAWY));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_DATA_REALIZACJI));
            if ((Original_NAZWA_WYROBU == null)) {
                throw new global::System.ArgumentNullException("Original_NAZWA_WYROBU");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_NAZWA_WYROBU));
            }
            if ((Original_UWAGI == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_UWAGI));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_ILOŚĆ_SZTUK));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_ILOŚĆ_M2));
            if ((Original_PODKŁAD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Original_PODKŁAD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_ŚRUT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(Original_ŚRUT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(Original_NR_TRAWERSY));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(ID_ZLECENIA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ID_STATUS, 
                    decimal ID_POWIERZCHNIA, 
                    decimal ID_POŁYSK, 
                    decimal ID_KOLOR, 
                    decimal ID_DOSTAWCA_FARBY, 
                    decimal ID_KLIENT, 
                    decimal ID_TYP_FARBY, 
                    string NR_ZLECENIA, 
                    System.DateTime DATA_DOSTAWY, 
                    System.DateTime DATA_REALIZACJI, 
                    string NAZWA_WYROBU, 
                    string UWAGI, 
                    decimal ILOŚĆ_SZTUK, 
                    decimal ILOŚĆ_M2, 
                    global::System.Nullable<bool> PODKŁAD, 
                    global::System.Nullable<bool> ŚRUT, 
                    decimal NR_TRAWERSY, 
                    decimal Original_ID_ZLECENIA, 
                    decimal Original_ID_STATUS, 
                    decimal Original_ID_POWIERZCHNIA, 
                    decimal Original_ID_POŁYSK, 
                    decimal Original_ID_KOLOR, 
                    decimal Original_ID_DOSTAWCA_FARBY, 
                    decimal Original_ID_KLIENT, 
                    decimal Original_ID_TYP_FARBY, 
                    string Original_NR_ZLECENIA, 
                    System.DateTime Original_DATA_DOSTAWY, 
                    System.DateTime Original_DATA_REALIZACJI, 
                    string Original_NAZWA_WYROBU, 
                    string Original_UWAGI, 
                    decimal Original_ILOŚĆ_SZTUK, 
                    decimal Original_ILOŚĆ_M2, 
                    global::System.Nullable<bool> Original_PODKŁAD, 
                    global::System.Nullable<bool> Original_ŚRUT, 
                    decimal Original_NR_TRAWERSY) {
            return this.Update(ID_STATUS, ID_POWIERZCHNIA, ID_POŁYSK, ID_KOLOR, ID_DOSTAWCA_FARBY, ID_KLIENT, ID_TYP_FARBY, NR_ZLECENIA, DATA_DOSTAWY, DATA_REALIZACJI, NAZWA_WYROBU, UWAGI, ILOŚĆ_SZTUK, ILOŚĆ_M2, PODKŁAD, ŚRUT, NR_TRAWERSY, Original_ID_ZLECENIA, Original_ID_STATUS, Original_ID_POWIERZCHNIA, Original_ID_POŁYSK, Original_ID_KOLOR, Original_ID_DOSTAWCA_FARBY, Original_ID_KLIENT, Original_ID_TYP_FARBY, Original_NR_ZLECENIA, Original_DATA_DOSTAWY, Original_DATA_REALIZACJI, Original_NAZWA_WYROBU, Original_UWAGI, Original_ILOŚĆ_SZTUK, Original_ILOŚĆ_M2, Original_PODKŁAD, Original_ŚRUT, Original_NR_TRAWERSY, Original_ID_ZLECENIA);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ZLECENIATableAdapter _zLECENIATableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ZLECENIATableAdapter ZLECENIATableAdapter {
            get {
                return this._zLECENIATableAdapter;
            }
            set {
                this._zLECENIATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._zLECENIATableAdapter != null) 
                            && (this._zLECENIATableAdapter.Connection != null))) {
                    return this._zLECENIATableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._zLECENIATableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(BAZA_MALARNIADataSet8 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._zLECENIATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ZLECENIA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._zLECENIATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(BAZA_MALARNIADataSet8 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._zLECENIATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ZLECENIA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._zLECENIATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(BAZA_MALARNIADataSet8 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._zLECENIATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ZLECENIA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._zLECENIATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(BAZA_MALARNIADataSet8 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._zLECENIATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._zLECENIATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("Obiekt TableAdapterManager nie zawiera informacji o połączeniu. Ustaw dla każdej " +
                        "właściwości TableAdapter obiektu TableAdapterManager prawidłowe wystąpienie obie" +
                        "ktu TableAdapter.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Nie można rozpocząć transakcji. Bieżące połączenie danych nie obsługuje transakcj" +
                        "i lub bieżący stan nie pozwala na rozpoczęcie transakcji.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._zLECENIATableAdapter != null)) {
                    revertConnections.Add(this._zLECENIATableAdapter, this._zLECENIATableAdapter.Connection);
                    this._zLECENIATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._zLECENIATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._zLECENIATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._zLECENIATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._zLECENIATableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._zLECENIATableAdapter != null)) {
                    this._zLECENIATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._zLECENIATableAdapter]));
                    this._zLECENIATableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591